From be4f94ca8afdef07487c135233c283517c164758 Mon Sep 17 00:00:00 2001
From: Gonzalo Odiard <godiard@gmail.com>
Date: Mon, 19 May 2014 17:38:03 -0300
Subject: [PATCH 1/3] Avoid breaking activity startup by dbus timeout on sigle
 instance - Fixes #4773

This problem only happen in activities configured with the option -s
in the activity.info "exec" field, and the objective is use a single process,
even when starting more than one instance. If the process do not reply,
start a new process, instead of show a error.

Signed-off-by: Gonzalo Odiard <godiard@sugarlabs.org>
---
 bin/sugar-activity | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/bin/sugar-activity b/bin/sugar-activity
index 18a6955..71f529f 100644
--- a/bin/sugar-activity
+++ b/bin/sugar-activity
@@ -146,12 +146,18 @@ def main():
         if not name:
             SingleProcess(service_name, activity_constructor)
         else:
-            single_process = sessionbus.get_object(service_name, service_path)
-            single_process.create(activity_handle.get_dict(),
-                                  dbus_interface='org.laptop.SingleProcess')
-
-            print 'Created %s in a single process.' % service_name
-            sys.exit(0)
+            try:
+                single_process = sessionbus.get_object(service_name,
+                                                       service_path)
+                single_process.create(
+                    activity_handle.get_dict(),
+                    dbus_interface='org.laptop.SingleProcess')
+
+                print 'Created %s in a single process.' % service_name
+                sys.exit(0)
+            except (TypeError, dbus.DBusException):
+                print 'Could not communicate with the instance process,' \
+                    'launching a new process'
 
     if hasattr(module, 'start'):
         module.start()
-- 
1.9.3

