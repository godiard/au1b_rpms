From 250d18ab1b85d1b2ac4c782c4011e70aabab74e4 Mon Sep 17 00:00:00 2001
From: Gonzalo Odiard <godiard@gmail.com>
Date: Fri, 7 Mar 2014 16:42:51 -0300
Subject: [PATCH 2/2] Persist the parameters loaded by the user in the network
 profiles

The pararmeters are stored in GConf

Signed-off-by: Gonzalo Odiard <gonzalo@laptop.org>
---
 extensions/cpsection/network/view.py | 60 ++++++++++++++++++++++++++++++------
 src/jarabe/model/network.py          | 55 +++++++++++++++++++++++++++++++--
 2 files changed, 104 insertions(+), 11 deletions(-)

diff --git a/extensions/cpsection/network/view.py b/extensions/cpsection/network/view.py
index c942889..e1eac79 100644
--- a/extensions/cpsection/network/view.py
+++ b/extensions/cpsection/network/view.py
@@ -454,11 +454,12 @@ class Network(SectionView):
                 index = len(option_sets) - 1
                 network_profiles_index[network_profile['title']] = index
 
-        box_mode = ComboSettingBox(_('Mode:'), option_sets, size_group)
-        box_mode.combo_box.set_active(0)
+        self._combo_setting_box = ComboSettingBox(_('Mode:'), option_sets,
+                                                  size_group)
 
-        box_hidden_network.pack_start(box_mode, False, False, 0)
-        box_mode.show()
+        box_hidden_network.pack_start(self._combo_setting_box, False, False,
+                                      0)
+        self._combo_setting_box.show()
 
         self._hidden_network_params_box = Gtk.VBox()
         self._hidden_network_params_box.show()
@@ -466,13 +467,14 @@ class Network(SectionView):
                                       False, 0)
 
         # _select_hidden_network_profile need the box already created
-        box_mode.connect('changed', self._select_hidden_network_profile)
+        self._combo_setting_box.connect('changed',
+                                        self._select_hidden_network_profile)
 
-        # show the widgets for the default mode
-        self._select_hidden_network_profile(box_mode)
+        # show the widgets for the configured mode
+        self._init_hidden_network_mode()
 
         btn_box = Gtk.HBox()
-        create_connection_btn = Gtk.Button('Connect to network')
+        create_connection_btn = Gtk.Button('Connect')
         create_connection_btn.connect('clicked', self.__connect_hidden_net_cb)
         btn_box.pack_start(create_connection_btn, False, False, 0)
         box_hidden_network.pack_start(btn_box, False, False, 0)
@@ -481,6 +483,32 @@ class Network(SectionView):
         workspace.pack_start(box_hidden_network, False, False, 0)
         box_hidden_network.show()
 
+    def _init_hidden_network_mode(self):
+        logging.error('_init_hidden_network_mode selected_ssid = %s',
+                      self._hidden_conn_manager.selected_ssid)
+        logging.error('_init_hidden_network_mode selected_profile = %s',
+                      self._hidden_conn_manager.selected_profile)
+        if self._hidden_conn_manager.selected_ssid:
+            self._combo_setting_box.combo_box.set_active(0)
+            self._hidden_network_name_entry.set_text(
+                self._hidden_conn_manager.selected_ssid)
+
+        elif self._hidden_conn_manager.selected_profile:
+            combo_model = self._combo_setting_box.combo_box.get_model()
+            combo_iter = combo_model.get_iter_first()
+            posi = 0
+            while combo_iter is not None:
+                logging.error('combo posi %d value = %s', posi,
+                              combo_model.get(combo_iter, 0)[0])
+                if combo_model.get(combo_iter, 0)[0] == \
+                        self._hidden_conn_manager.selected_profile['title']:
+                    self._combo_setting_box.combo_box.set_active(posi)
+                combo_iter = combo_model.iter_next(combo_iter)
+                posi += 1
+        else:
+            # if nothing configured
+            self._combo_setting_box.combo_box.set_active(0)
+
     def _select_hidden_network_profile(self, combo_setting_box):
         giter = combo_setting_box.combo_box.get_active_iter()
         new_box = combo_setting_box.combo_box.get_model().get(giter, 2)[0]
@@ -493,6 +521,14 @@ class Network(SectionView):
         self._hidden_conn_manager.selected_profile = \
             combo_setting_box.combo_box.get_model().get(giter, 3)[0]
 
+        # load the values previously stored
+        stored_parameters = self._hidden_conn_manager.stored_parameters[
+            self._hidden_conn_manager.selected_profile['title']]
+        for entry in self._entries_properties.keys():
+            property_name = self._entries_properties[entry]
+            if property_name in stored_parameters.keys():
+                entry.set_text(stored_parameters[property_name])
+
     def __connect_hidden_net_cb(self, button):
 
         profile = self._hidden_conn_manager.selected_profile
@@ -504,6 +540,7 @@ class Network(SectionView):
 
             # get the values from all the entries
             current_box = self._hidden_network_params_box.get_children()[0]
+            requested_parameters = []
             for child in current_box.get_children():
                 # child is the SettingBox
                 entry = child.get_children()[1]
@@ -511,8 +548,13 @@ class Network(SectionView):
                 logging.error('property %s value %s', property_name,
                               entry.get_text())
                 profile[property_name] = entry.get_text()
+                # add in a list to save the requested parameters
+                requested_parameters.append(property_name)
+
             logging.error('profile %s',
                           self._hidden_conn_manager.selected_profile)
+            self._hidden_conn_manager.store_requested_parameters(
+                requested_parameters)
             self._hidden_conn_manager.create_and_connect_by_profile()
 
     def _add_proxy_section(self, workspace):
@@ -664,7 +706,7 @@ class Network(SectionView):
 
         # if a profile was selected update the combo value
         self._proxy_profile_name = self._model.get_proxy_profile_name()
-        logging.error('Profile selected %s', self._proxy_profile_name)
+        logging.error('Proxy Profile selected %s', self._proxy_profile_name)
         if self._proxy_profile_name is not None and \
                 self._proxy_profile_name != '':
             if self._proxy_profile_name in proxy_profiles_index:
diff --git a/src/jarabe/model/network.py b/src/jarabe/model/network.py
index 18ed79d..49adba6 100644
--- a/src/jarabe/model/network.py
+++ b/src/jarabe/model/network.py
@@ -614,14 +614,29 @@ class HiddenNetworkManager():
         self._netmgr.GetDevices(reply_handler=self.__get_devices_reply_cb,
                                 error_handler=self.__get_devices_error_cb)
 
+        # get the values previously saved
+        profile_name = client.get_string(
+            '/desktop/sugar/extensions/network/hidden_network_profile')
+        self.selected_ssid = client.get_string(
+            '/desktop/sugar/extensions/network/hidden_network_ssid')
+        logging.error('get profile name from gconf = %s', profile_name)
+        self.selected_profile = None
         # get the list of connectivity profiles of type "connectivity"
         self.network_profiles = []
-        logging.debug('profiles %s', conn_profiles)
+        self.stored_parameters = {}
+        logging.debug('all profiles %s', conn_profiles)
         for profile_key in conn_profiles:
             profile = conn_profiles[profile_key]
             if profile['type'] == 'connectivity':
+                self.stored_parameters[profile['title']] = \
+                    self.load_requested_parameters(profile['title'])
                 self.network_profiles.append(profile)
-        self.selected_profile = None
+                if profile_name:
+                    if profile_name == profile['title']:
+                        logging.error('SELECTED PROFILE FOUND = %s',
+                                      profile_name)
+                        self.selected_profile = profile
+        logging.error('stored_parameters = %s', self.stored_parameters)
 
     def __get_devices_reply_cb(self, devices_o):
         logging.debug('__get_devices_reply_cb len(devices) = %d',
@@ -649,6 +664,13 @@ class HiddenNetworkManager():
 
     def create_and_connect_by_ssid(self, ssid):
         logging.debug('create_and_connect_by_ssid ssid=%s', ssid)
+        # save in gconf
+        client = GConf.Client.get_default()
+        client.set_string(
+            '/desktop/sugar/extensions/network/hidden_network_profile', '')
+        client.set_string(
+            '/desktop/sugar/extensions/network/hidden_network_ssid', ssid)
+
         connection = find_connection_by_ssid(ssid)
         if connection is None:
             logging.error('connection is None')
@@ -694,6 +716,14 @@ class HiddenNetworkManager():
             logging.error('No profile selected')
             return
 
+        # save in gconf
+        client = GConf.Client.get_default()
+        client.set_string(
+            '/desktop/sugar/extensions/network/hidden_network_profile',
+            self.selected_profile['title'])
+        client.set_string(
+            '/desktop/sugar/extensions/network/hidden_network_ssid', '')
+
         profile = self.selected_profile
         connection = find_connection_by_ssid(profile['connection.id'])
         if connection is None:
@@ -742,6 +772,27 @@ class HiddenNetworkManager():
                 connection.get_path(),
                 self._active_device, '/')
 
+    def store_requested_parameters(self, requested_parameters):
+        client = GConf.Client.get_default()
+        profiles_path = '/desktop/sugar/extensions/network/profiles'
+        for parameter in requested_parameters:
+            logging.error('Storing in gconf %s = %s', parameter,
+                          self.selected_profile[parameter])
+            client.set_string('%s/%s/%s' %
+                              (profiles_path, self.selected_profile['title'],
+                               parameter), self.selected_profile[parameter])
+
+    def load_requested_parameters(self, profile_title):
+        requested_parameters = {}
+        client = GConf.Client.get_default()
+        entries = client.all_entries(
+            '/desktop/sugar/extensions/network/profiles/%s' % profile_title)
+        for entry in entries:
+            parameter = entry.key[entry.key.rfind('/') + 1:]
+            value = entry.value.to_string()
+            requested_parameters[parameter] = value
+        return requested_parameters
+
     def _add_connection_reply_cb(self, netmgr, connection):
         logging.debug('Added connection: %s', connection)
 
-- 
1.8.1.4

