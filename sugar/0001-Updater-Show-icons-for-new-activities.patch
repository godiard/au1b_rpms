From efc7bfab6a3c953bddecb03a4ba03ba5e957d1eb Mon Sep 17 00:00:00 2001
From: Gonzalo Odiard <godiard@gmail.com>
Date: Wed, 19 Feb 2014 14:00:51 -0300
Subject: [PATCH] Updater: Show icons for new activities

---
 extensions/cpsection/updater/view.py   | 30 +++++++++++++++++++++++++++
 src/jarabe/model/update/__init__.py    |  3 ++-
 src/jarabe/model/update/microformat.py | 37 +++++++++++++++++++++++++---------
 3 files changed, 60 insertions(+), 10 deletions(-)

diff --git a/extensions/cpsection/updater/view.py b/extensions/cpsection/updater/view.py
index 80ed8da..b3ef8f7 100644
--- a/extensions/cpsection/updater/view.py
+++ b/extensions/cpsection/updater/view.py
@@ -19,6 +19,8 @@ from gettext import gettext as _
 from gettext import ngettext
 import locale
 import logging
+import tempfile
+import os
 
 from gi.repository import GObject
 from gi.repository import Gtk
@@ -110,6 +112,7 @@ class ActivityUpdater(SectionView):
         self._top_label.set_markup('<big>%s</big>' % top_message)
 
         if self._update_box in self.get_children():
+            self._update_box.clean()
             self.remove(self._update_box)
             self._update_box = None
 
@@ -129,6 +132,7 @@ class ActivityUpdater(SectionView):
             self._progress_pane = None
 
         if self._update_box in self.get_children():
+            self._update_box.clean()
             self.remove(self._update_box)
             self._update_box = None
 
@@ -179,12 +183,17 @@ class ActivityUpdater(SectionView):
         self._refresh()
 
     def _refresh(self):
+        if self._update_box is not None:
+            self._update_box.clean()
         self._model.check_updates()
 
     def __install_button_clicked_cb(self, button):
+        self._update_box.clean()
         self._model.update(self._update_box.get_bundles_to_update())
 
     def __cancel_button_clicked_cb(self, button):
+        if self._update_box is not None:
+            self._update_box.clean()
         self._model.cancel()
 
     def __finished_cb(self, model, installed_updates, failed_updates,
@@ -200,6 +209,8 @@ class ActivityUpdater(SectionView):
 
     def undo(self):
         self._model.cancel()
+        if self._update_box is not None:
+            self._update_box.clean()
 
 
 class ProgressPane(Gtk.VBox):
@@ -309,6 +320,8 @@ class UpdateBox(Gtk.VBox):
                 bundles_to_update.append(row[UpdateListModel.BUNDLE_ID])
         return bundles_to_update
 
+    def clean(self):
+        self._update_list.get_model().clean()
 
 class UpdateList(Gtk.TreeView):
 
@@ -371,6 +384,7 @@ class UpdateListModel(Gtk.ListStore):
     def __init__(self, updates):
         Gtk.ListStore.__init__(self, str, bool, str, str, int)
         registry = bundleregistry.get_registry()
+        self._icon_temp_files = []
 
         for bundle_update in updates:
             installed = registry.get_bundle(bundle_update.bundle_id)
@@ -379,6 +393,14 @@ class UpdateListModel(Gtk.ListStore):
             row[self.SELECTED] = True
             if installed:
                 row[self.ICON_FILE_NAME] = installed.get_icon()
+            else:
+                if bundle_update.icon_data is not None:
+                    # save the icon to a temporary file
+                    with tempfile.NamedTemporaryFile(
+                            mode='w', suffix='svg', delete=False) as iconfile:
+                        iconfile.write(bundle_update.icon_data)
+                        self._icon_temp_files.append(iconfile.name)
+                        row[self.ICON_FILE_NAME] = iconfile.name
 
             if installed:
                 details = _('From version %(current)s to %(new)s (Size: '
@@ -400,6 +422,14 @@ class UpdateListModel(Gtk.ListStore):
 
             self.append(row)
 
+    def clean(self):
+        for filename in self._icon_temp_files:
+            logging.error('Removing temporary file %s', filename)
+            try:
+                os.unlink(filename)
+            except OSError:
+                pass
+
 
 def _format_size(size):
     """Convert a given size in bytes to a nicer better readable unit"""
diff --git a/src/jarabe/model/update/__init__.py b/src/jarabe/model/update/__init__.py
index 35840b7..ad7f068 100644
--- a/src/jarabe/model/update/__init__.py
+++ b/src/jarabe/model/update/__init__.py
@@ -17,9 +17,10 @@
 
 
 class BundleUpdate(object):
-    def __init__(self, bundle_id, name, version, link, size):
+    def __init__(self, bundle_id, name, version, link, size, icon_data=None):
         self.bundle_id = bundle_id
         self.name = name
         self.version = version
         self.link = link
         self.size = size
+        self.icon_data = icon_data
diff --git a/src/jarabe/model/update/microformat.py b/src/jarabe/model/update/microformat.py
index b6179e4..7f1373b 100644
--- a/src/jarabe/model/update/microformat.py
+++ b/src/jarabe/model/update/microformat.py
@@ -264,7 +264,7 @@ class MicroformatUpdater(object):
 
         GLib.idle_add(self._check_next_update)
 
-    def _name_lookup_complete(self, lookup, result, size):
+    def _name_lookup_complete(self, lookup, result, size, icon_data):
         _logger.debug("Name lookup result: %r", result)
         if size is None:
             # if the size lookup failed, assume this update is bad
@@ -279,6 +279,9 @@ class MicroformatUpdater(object):
             self._bundle_update.name = result
 
         self._bundle_update.size = size
+        if icon_data is not None:
+            self._bundle_update.icon_data = icon_data
+
         self._updates.append(self._bundle_update)
         self._check_next_update()
 
@@ -306,12 +309,13 @@ class MetadataLookup(GObject.GObject):
     and there is no local source of the activity's name.
     """
     __gsignals__ = {
-        'complete': (GObject.SignalFlags.RUN_FIRST, None, (object, int)),
+        'complete': (GObject.SignalFlags.RUN_FIRST, None, (object, int, str)),
     }
 
     def __init__(self, url):
         GObject.GObject.__init__(self)
         self._url = url
+        self._icon_data = None
         self._size = None
 
     def run(self):
@@ -356,10 +360,23 @@ class MetadataLookup(GObject.GObject):
         # case of a content bundle, that name is expected to be already
         # localized according to the content.
         name = self._locale_data_lookup()
+        icon_path = None
         if not name and have_activity_info:
-            name = self._activity_info_lookup()
+            name = self._activity_info_lookup('name')
+        if not name and have_library_info:
+            name = self._library_info_lookup('name')
+
+        # get icondata
+        if have_activity_info:
+            icon_name = self._activity_info_lookup('icon')
         if not name and have_library_info:
-            name = self._library_info_lookup()
+            icon_name = self._library_info_lookup('icon')
+        icon_path = os.path.join(self._prefix, 'activity',
+                                 '%s.svg' % icon_name)
+        logging.error('icon_path %s', icon_path)
+        if icon_path is not None and icon_path in self._namelist:
+            self._icon_data = self._zf.read(icon_path)
+
         return name
 
     def _locale_data_lookup(self):
@@ -377,17 +394,19 @@ class MetadataLookup(GObject.GObject):
             return cp.get('Activity', 'name')
         return None
 
-    def _activity_info_lookup(self):
+    def _activity_info_lookup(self, parameter):
         filename = os.path.join(self._prefix, 'activity', 'activity.info')
         cp = ConfigParser()
         cp.readfp(StringIO(self._zf.read(filename)))
-        return cp.get('Activity', 'name')
+        return cp.get('Activity', parameter)
 
-    def _library_info_lookup(self):
+    def _library_info_lookup(self, parameter):
         filename = os.path.join(self._prefix, 'library', 'library.info')
         cp = ConfigParser()
         cp.readfp(StringIO(self._zf.read(filename)))
-        return cp.get('Library', 'name')
+        return cp.get('Library', parameter)
 
     def _complete(self, result):
-        GLib.idle_add(self.emit, 'complete', result, self._size)
+        logging.error('MetadataLookup._complete icon_data %s', self._icon_data)
+        GLib.idle_add(self.emit, 'complete', result, self._size,
+                      self._icon_data)
-- 
1.8.1.4

