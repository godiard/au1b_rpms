From f059b13fab625abbd00fa5fc88e78c528b8da2f8 Mon Sep 17 00:00:00 2001
From: Walter Bender <walter@sugarlabs.org>
Date: Thu, 12 Sep 2013 11:35:01 -0400
Subject: [PATCH] Add maximum open activity limit

At the request of OLPC AU, this patch uses gconf to set a maximum
number of open activities [1]. An alert is shown if the user tries to
launch more activities than the maximum asking them to close an
activity before opening a new one. If maximum_number_of_open_activites is
not set or == 0, then there is no maximum limit applied.

[1] /desktop/sugar/maximum_number_of_open_activities
---
 src/jarabe/desktop/homewindow.py      | 32 ++++++++++++++++++++++++++++++--
 src/jarabe/journal/journalactivity.py | 23 ++++++++++++++++++++++-
 src/jarabe/journal/misc.py            |  5 ++++-
 src/jarabe/model/shell.py             | 21 +++++++++++++++++++++
 src/jarabe/view/launcher.py           |  3 +++
 5 files changed, 80 insertions(+), 4 deletions(-)

diff --git a/src/jarabe/desktop/homewindow.py b/src/jarabe/desktop/homewindow.py
index 6dfb142..70ec940 100644
--- a/src/jarabe/desktop/homewindow.py
+++ b/src/jarabe/desktop/homewindow.py
@@ -24,6 +24,7 @@ from gi.repository import GdkX11
 
 from sugar3.graphics import style
 from sugar3.graphics import palettegroup
+from sugar3.graphics.alert import ErrorAlert
 
 from jarabe.desktop.meshbox import MeshBox
 from jarabe.desktop.homebox import HomeBox
@@ -97,8 +98,35 @@ class HomeWindow(Gtk.Window):
         self._transition_box.connect('completed',
                                      self._transition_completed_cb)
 
-        shell.get_model().zoom_level_changed.connect(
-            self.__zoom_level_changed_cb)
+        self._alert = None
+        shell_model = shell.get_model()
+        shell_model.zoom_level_changed.connect(self.__zoom_level_changed_cb)
+        shell_model.connect('open-activity-error',
+                            self.__open_activity_error_cb)
+
+    def add_alert(self, alert):
+        if self._alert is not None:
+            self.remove_alert()
+        self._alert = alert
+        self._box.pack_start(alert, False, True, 0)
+        self._box.reorder_child(alert, 1)
+
+    def remove_alert(self):
+        self._box.remove(self._alert)
+        self._alert = None
+
+    def __open_activity_error_cb(self, model, title, message):
+        logging.error('%s: %s' % (title, message))
+        if self._alert is None:
+            self._alert = ErrorAlert()
+            self._alert.connect('response', self.__alert_response_cb)
+            self.add_alert(self._alert)
+            self._alert.show()
+        self._alert.props.title = title
+        self._alert.props.msg = message
+
+    def __alert_response_cb(self, alert, response_id):
+        self.remove_alert()
 
     def _deactivate_view(self, level):
         group = palettegroup.get_group('default')
diff --git a/src/jarabe/journal/journalactivity.py b/src/jarabe/journal/journalactivity.py
index ea065ee..bc5fe29 100644
--- a/src/jarabe/journal/journalactivity.py
+++ b/src/jarabe/journal/journalactivity.py
@@ -45,7 +45,7 @@ from jarabe.journal.modalalert import ModalAlert
 from jarabe.journal import model
 from jarabe.journal.journalwindow import JournalWindow
 
-from jarabe.model import session
+from jarabe.model import session, shell
 
 
 J_DBUS_SERVICE = 'org.laptop.Journal'
@@ -173,10 +173,20 @@ class JournalActivity(JournalWindow):
         self._critical_space_alert = None
         self._check_available_space()
 
+        self._alert = None
+        shell_model = shell.get_model()
+        shell_model.connect('open-activity-error',
+                            self.__open_activity_error_cb)
+
         session.get_session_manager().shutdown_signal.connect(
             self._session_manager_shutdown_cb)
 
     def volume_error_cb(self, gobject, message, severity):
+        if self._alert is not None:
+            # Volume-error alert should override maximum-reached alert
+            self.remove_alert(self._alert)
+            self._alert = None
+
         alert = ErrorAlert(title=severity, msg=message)
         alert.connect('response', self.__alert_response_cb)
         self.add_alert(alert)
@@ -184,6 +194,17 @@ class JournalActivity(JournalWindow):
 
     def __alert_response_cb(self, alert, response_id):
         self.remove_alert(alert)
+        self._alert = None
+
+    def __open_activity_error_cb(self, model, title, message):
+        logging.error('%s: %s' % (title, message))
+        if self._alert is None:
+            self._alert = ErrorAlert()
+            self._alert.connect('response', self.__alert_response_cb)
+            self.add_alert(self._alert)
+            self._alert.show()
+        self._alert.props.title = title
+        self._alert.props.msg = message
 
     def __realize_cb(self, window):
         xid = window.get_window().get_xid()
diff --git a/src/jarabe/journal/misc.py b/src/jarabe/journal/misc.py
index fb9794b..1a1f370 100644
--- a/src/jarabe/journal/misc.py
+++ b/src/jarabe/journal/misc.py
@@ -222,6 +222,10 @@ def resume(metadata, bundle_id=None, force_bundle_downgrade=False):
 
 def launch(bundle, activity_id=None, object_id=None, uri=None, color=None,
            invited=False):
+    shell_model = shell.get_model()
+    if shell_model.reached_maximum_number_of_open_activities():
+        return
+
     if activity_id is None or not activity_id:
         activity_id = activityfactory.create_activity_id()
 
@@ -239,7 +243,6 @@ def launch(bundle, activity_id=None, object_id=None, uri=None, color=None,
         bundle = activities[0]
         logging.debug('Launching content bundle with uri %s', uri)
 
-    shell_model = shell.get_model()
     activity = shell_model.get_activity_by_id(activity_id)
     if activity is not None:
         logging.debug('re-launch %r', activity.get_window())
diff --git a/src/jarabe/model/shell.py b/src/jarabe/model/shell.py
index a75e228..a8fefae 100644
--- a/src/jarabe/model/shell.py
+++ b/src/jarabe/model/shell.py
@@ -17,6 +17,7 @@
 
 import logging
 import time
+from gettext import gettext as _
 
 from gi.repository import GConf
 from gi.repository import Wnck
@@ -39,6 +40,10 @@ _SERVICE_INTERFACE = 'org.laptop.Activity'
 
 _model = None
 
+_ACTIVITY_ALERT_TITLE = _('Activity launcher')
+_MAX_NUMBER_OF_ACTIVITIES_MESSAGE = _('The maximum number of open activities \
+has been reached. Please close an activity before launching a new one.')
+
 
 class Activity(GObject.GObject):
     """Activity which appears in the "Home View" of the Sugar shell
@@ -358,6 +363,8 @@ class ShellModel(GObject.GObject):
     """
 
     __gsignals__ = {
+        'open-activity-error': (GObject.SignalFlags.RUN_FIRST, None,
+                                ([str, str])),
         'activity-added': (GObject.SignalFlags.RUN_FIRST, None,
                            ([GObject.TYPE_PYOBJECT])),
         'activity-removed': (GObject.SignalFlags.RUN_FIRST, None,
@@ -403,6 +410,10 @@ class ShellModel(GObject.GObject):
 
         self._screen.toggle_showing_desktop(True)
 
+        client = GConf.Client.get_default()
+        self._maximum_number_of_open_activities = client.get_int(
+            '/desktop/sugar/maximum_number_of_open_activities')
+
     def get_launcher(self, activity_id):
         return self._launchers.get(str(activity_id))
 
@@ -645,6 +656,16 @@ class ShellModel(GObject.GObject):
 
         self._update_zoom_level(window)
 
+    def reached_maximum_number_of_open_activities(self):
+        activities = self._get_activities_with_window()
+        if self._maximum_number_of_open_activities > 0 and \
+           len(activities) > self._maximum_number_of_open_activities:
+            self.emit('open-activity-error', _ACTIVITY_ALERT_TITLE,
+                      _MAX_NUMBER_OF_ACTIVITIES_MESSAGE)
+            return True
+        else:
+            return False
+
     def _add_activity(self, home_activity):
         self._activities.append(home_activity)
         self.emit('activity-added', home_activity)
diff --git a/src/jarabe/view/launcher.py b/src/jarabe/view/launcher.py
index b6610a8..bc425cd 100644
--- a/src/jarabe/view/launcher.py
+++ b/src/jarabe/view/launcher.py
@@ -120,6 +120,9 @@ def setup():
 def add_launcher(activity_id, icon_path, icon_color):
     model = shell.get_model()
 
+    if model.reached_maximum_number_of_open_activities():
+        return
+
     if model.get_launcher(activity_id) is not None:
         return
 
-- 
1.8.1.4

